// Source : http://122.139.62.222:88/JudgeOnline/problem.php?id=1132
// Date   : 2019-02-07

/**
  递推 文科生的悲哀

题目描述
化学不及格的Matrix67无奈选择了文科。他必须硬着头皮准备一次又一次的文科考试。
在这一学期一共有n次文科考试，考试科目有4种，分别为政治、历史、地理和综合。每次考哪一科是不定的，因此在考试前Matrix67不知道应该 去复习哪一科的功课。他希望能预测出下一次可能考的科目。于是，他收集到了以往的文科考试的资料。从以往的考试中，他发现了这样几个规律：
1.如果这次考的是政治，那么下一次一定会考历史；
2.如果这次考的是综合，那么下一次一定会考地理；
3.如果这次考的是历史，那么下一次要么考政治，要么考地理；
4.如果这次考的是地理，那么下一次要么考历史，要么考综合。
Matrix67已经知道，本学期的第一次考试科目为政治。他打算拟定一个可以应对所有可能情况的应考复习计划。因此，他想知道，整个学期有多少种可能的考试科目安排满足以上规律。你能帮他算出来吗？

输入
一个正整数n，代表本学期总的考试次数。（输入数据保证n<=10000）

输出
一个正整数，表示符合规律的科目安排方案的总数。
考虑到这个结果可能会很大，因此你只需要输出它mod 7654321的值即可。

样例输入
5
样例输出
5
*/

/*
当n=5时，有以下5种方案满足要求：

    1. 政治-->历史-->政治-->历史-->政治
    2. 政治-->历史-->政治-->历史-->地理
    3. 政治-->历史-->地理-->历史-->政治
    4. 政治-->历史-->地理-->历史-->地理
    5. 政治-->历史-->地理-->综合-->地理
**/

#include <iostream>
#include<stdio.h>
using namespace std;

#define MAXN 10001

int res[MAXN], n;
const int mod = 7654321;

int f(int n)
{
    if(res[n]) return res[n];
    return res[n] = (f(n-1)%mod + f(n-2)%mod)%mod;
}

int main()
{
    res[1]=res[2]=1;
    cin>>n;
    cout<<f(n)<<endl;
    return 0;
}
