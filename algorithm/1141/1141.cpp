// Source : http://122.139.62.222:88/JudgeOnline/problem.php?id=1141
// Date   : 2019-02-27

/**
  递推 数的划分问题二
题目描述
把正整数N分解成M个非负整数的和，即使M个数相同但顺序不同也认为是不同的方案，
要求总方案数。如3=1+2跟3=2+1是两个不同的方案。
输入
第一行输入两个整数(1<=M<=N<=30)。
输出
输出一个整数表示方案数。
样例输入
2 3
样例输出
6
*/

/*
该题与 数的划分问题一 的区别在于加数允许为0
利用挡板问题解决此问题，把每一种分解方案中的加数都加上1后跟原来的分解方案是一一对应的，
可以把此题看作是“把N+M分解成M个正整数的方案数”，答案等于C(N+M-1,M-1)
eg:
    2=0+0+2     <=>     5=1+1+3
    2=0+2+0     <=>     5=1+3+1
    2=2+0+0     <=>     5=3+1+1
    2=0+1+1     <=>     5=1+2+2
    2=1+0+1     <=>     5=2+1+2
    2=1+1+0     <=>     5=2+2+1

递推式：
    dp[i][j]=dp[i-1][j-1]+dp[i-1][j]
**/

#include<iostream>
using namespace std;
int n,m,i,j;
#define N 61
long long dp[N][N];

long long func()
{
    for(i=0;i<N;++i)
        dp[i][i]=dp[i][0]=1;
    for(int i=1;i<N;++i)
        for(int j=1;j<N;++j)
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j];
}

int main()
{
    func();
    cin>>n>>m;
    cout<<dp[n+m-1][m-1]<<endl;
	return 0;
}

